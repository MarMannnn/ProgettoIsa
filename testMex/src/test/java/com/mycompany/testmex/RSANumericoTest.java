/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/UnitTests/JUnit5TestClass.java to edit this template
 */
package com.mycompany.testmex;

import java.math.BigInteger;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
 *
 * @author marman
 */
public class RSANumericoTest {
    
    public RSANumericoTest() {
    }

    /**
     * Test of cifratura method, of class RSANumerico.
     */
    @Test
    public void testCifratura() {
        System.out.println("test metodo cifratura");
        String msgDaCifrare = "ciao";
        RSANumerico instance = new RSANumerico("725151050008967873161094285647190126857466930720990327430883623831065969336577908277297811457438259819852715869125023861130875670010149409654797795781560185");
        String expResult = "2375589934599949182048340519685405030981426852435908700982431262882842756216090260584903550733261253601286532071838946795168821842477715748490674983543719306144523284784687661058745960429565246319332924242127546379092504297747869534972540512354081603904380839025040323014837397873107587799272086643509294808502157747830837052493968878712332399685171724642643178183750522738491389521565744369720909688087900299473518799380171255244763754387699261743321685917151868264149404985848478622536520550730878492083501834767958915766934475168206950182662635946742658132494446275182196343572272099897621241790024340637698175819";
        String result = instance.cifratura(msgDaCifrare);
        assertEquals(expResult, result);
       
        
    }
    

    /**
     * Test of decifratura method, of class RSANumerico.
     */
    @Test
    public void testDecifratura() {
        System.out.println("test metodo decifratura");
        String msgDaDecifrare = "2375589934599949182048340519685405030981426852435908700982431262882842756216090260584903550733261253601286532071838946795168821842477715748490674983543719306144523284784687661058745960429565246319332924242127546379092504297747869534972540512354081603904380839025040323014837397873107587799272086643509294808502157747830837052493968878712332399685171724642643178183750522738491389521565744369720909688087900299473518799380171255244763754387699261743321685917151868264149404985848478622536520550730878492083501834767958915766934475168206950182662635946742658132494446275182196343572272099897621241790024340637698175819";
        BigInteger d = new BigInteger("8274961930261298473418953057409006767378627922561049731105068852916737935157236115349454947697559573415823685039545705233232760712479747371762529743040968705092398814257448180116685941508134667828411003769250168385794493163790414535520821558213415554105677415849899012019107137098888904693465808951835992996161854309226471217895956230038179320245768150204529507829161918611791966858180803919675999112758373239282339457916913409236626994567389056858744038244127318584860270569248397693263337611254207720168763852813688053435801390393123314009697675127702281802430124592874734493942369694683275982265820899084900175565");
        RSANumerico instance = new RSANumerico(d);
        String expResult = "ciao";
        String result = instance.decifratura(msgDaDecifrare);
        assertEquals(expResult, result);
        
    }

    /**
     * Test of encryptMessage method, of class RSANumerico.
     */
    @Test
    public void testEncryptMessage() {
        System.out.println("test metodo encryptMessage");
        BigInteger numeroMessaggio = new BigInteger("9910597111");
        RSANumerico instance = new RSANumerico("725151050008967873161094285647190126857466930720990327430883623831065969336577908277297811457438259819852715869125023861130875670010149409654797795781560185");
        BigInteger expResult = new BigInteger("2375589934599949182048340519685405030981426852435908700982431262882842756216090260584903550733261253601286532071838946795168821842477715748490674983543719306144523284784687661058745960429565246319332924242127546379092504297747869534972540512354081603904380839025040323014837397873107587799272086643509294808502157747830837052493968878712332399685171724642643178183750522738491389521565744369720909688087900299473518799380171255244763754387699261743321685917151868264149404985848478622536520550730878492083501834767958915766934475168206950182662635946742658132494446275182196343572272099897621241790024340637698175819");
        BigInteger result = instance.encryptMessage(numeroMessaggio);
        assertEquals(expResult, result);
       
    }
    
    /**
     * Test of decryptMessage method, of class RSANumerico.
     */
    @Test
    public void testDecryptMessage() {
        System.out.println("test metodo decryptMessage");
        BigInteger msgDaDeci = new BigInteger("2375589934599949182048340519685405030981426852435908700982431262882842756216090260584903550733261253601286532071838946795168821842477715748490674983543719306144523284784687661058745960429565246319332924242127546379092504297747869534972540512354081603904380839025040323014837397873107587799272086643509294808502157747830837052493968878712332399685171724642643178183750522738491389521565744369720909688087900299473518799380171255244763754387699261743321685917151868264149404985848478622536520550730878492083501834767958915766934475168206950182662635946742658132494446275182196343572272099897621241790024340637698175819");
        BigInteger d = new BigInteger("8274961930261298473418953057409006767378627922561049731105068852916737935157236115349454947697559573415823685039545705233232760712479747371762529743040968705092398814257448180116685941508134667828411003769250168385794493163790414535520821558213415554105677415849899012019107137098888904693465808951835992996161854309226471217895956230038179320245768150204529507829161918611791966858180803919675999112758373239282339457916913409236626994567389056858744038244127318584860270569248397693263337611254207720168763852813688053435801390393123314009697675127702281802430124592874734493942369694683275982265820899084900175565");
        RSANumerico instance = new RSANumerico(d);
        BigInteger expResult = new BigInteger("9910597111");
        BigInteger result = instance.decryptMessage(msgDaDeci);
        assertEquals(expResult, result);

    }

    /**
     * Test of asciiToSentence method, of class RSANumerico.
     */
    @Test
    public void testAsciiToSentence() {
        System.out.println("test metodo asciiToSentence con lettera c");
        String str = "99";
        int len = str.length();
        String expResult = "c";
        String result = RSANumerico.asciiToSentence(str, len);
        assertEquals(result,expResult);}
    /*test primo carattere convertibile*/
    @Test
    public void testAsciiToSentence1(){
        System.out.println("test metodo asciiToSentence con !");
        String s = "33";
        int l = s.length();
        String exp = "!";
        String r = RSANumerico.asciiToSentence(s, l);
        assertEquals(r,exp);   
    }
    /* test ultimo carattere convertibile*/
    @Test
    public void testAsciiToSentence2(){
        System.out.println("test metodo asciiToSentence con ~");
        String s = "126";
        int l = s.length();
        String exp = "~";
        String r = RSANumerico.asciiToSentence(s, l);
        assertEquals(r,exp);
        
    }
    /** utilizzato come sistema di conversione il codice ascii consapevoli della mancanza di alcune lettere composte 
     * come ad esempio: è, ò, §, à, ç etc
     */
    

    
}
